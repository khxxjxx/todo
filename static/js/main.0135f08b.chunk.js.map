{"version":3,"sources":["components/Item.js","components/List.js","components/Input.js","components/NavBar.js","components/Clock.js","components/Week.js","components/Weeks.js","Day.js","Month.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Item","props","className","clicked","onClick","id","type","htmlFor","children","onDelete","List","list","map","value","Input","lists","localStorage","getItem","now","JSON","parse","useState","input","setInput","setList","useEffect","setItem","stringify","onSubmit","e","preventDefault","prevList","length","placeholder","onChange","target","window","confirm","newList","filter","findIndex","NavBar","clickHandler","setNow","moment","Navbar","bg","variant","Container","to","Brand","Nav","Link","as","ref","today","Clock","Date","setToday","compare","getFullYear","getMonth","getDate","clone","format","setTimeout","clearTimeout","getHours","getMinutes","getSeconds","Week","days","idx","onDaysChange","find","day","subtract","add","Weeks","SetDays","daysChangeHandler","newNow","newDays","push","shift","unshift","pop","Day","Month","getMoment","setMoment","firstWeek","startOf","week","lastWeek","endOf","onClickHandler","history","result","concat","Array","fill","data","index","undefined","calendarArr","App","useHistory","useRef","current","focus","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.0135f08b.chunk.js","sourcesContent":["const Item = props => {\n  const deleteHandler = () => {\n    props.onDelete(props.id);\n  };\n  const clickHandler = () => {\n    props.onClick(props.id);\n  };\n\n  return (\n    <li className={`${props.clicked ? 'clicked' : ''}`}>\n      <input\n        onClick={clickHandler}\n        className=\"checkbox\"\n        type=\"checkbox\"\n        id={props.id}\n      />\n      <label htmlFor={props.id} />\n      {props.children}\n      <button className=\"delete\" onClick={deleteHandler}>\n        ✕\n      </button>\n    </li>\n  );\n};\n\nexport default Item;\n","import React from 'react';\nimport Item from './Item';\n\nconst List = props => {\n  return (\n    <div className=\"list\">\n      <ul>\n        {props.list.map(list => (\n          <Item\n            key={list.id}\n            id={list.id}\n            clicked={list.clicked}\n            onDelete={props.onDelete}\n            onClick={props.onClick}>\n            {list.value}\n          </Item>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useState, useEffect } from 'react';\nimport List from './List';\n\nconst Input = props => {\n  let lists = localStorage.getItem(props.now);\n  lists === null ? (lists = []) : (lists = JSON.parse(lists));\n\n  const [input, setInput] = useState('');\n  const [list, setList] = useState(lists);\n\n  useEffect(() => {\n    setList(lists);\n  }, [props.now]);\n\n  useEffect(() => {\n    localStorage.setItem(props.now, JSON.stringify(list));\n  }, [list]);\n\n  const inputValue = e => {\n    setInput(e.target.value);\n  };\n\n  const submit = e => {\n    e.preventDefault();\n    input !== '' &&\n      setList(prevList => {\n        return [...prevList, { id: list.length, value: input, clicked: false }];\n      });\n    setInput('');\n  };\n\n  const onDeleteHandler = id => {\n    if (window.confirm('리스트에서 완전히 삭제하시겠습니까?')) {\n      const newList = list.filter(list => list.id !== id);\n      setList(newList);\n    }\n  };\n\n  const onClickHandler = id => {\n    let newList = [...list];\n    newList[newList.findIndex(list => list.id === id)].clicked =\n      !newList[newList.findIndex(list => list.id === id)].clicked;\n    setList(newList);\n  };\n\n  return (\n    <>\n      <form className=\"input\" onSubmit={submit}>\n        <input\n          type=\"text\"\n          value={input}\n          placeholder=\"할일을 적어주세요\"\n          onChange={inputValue}\n        />\n      </form>\n      <List\n        list={list}\n        id={list.id}\n        clicked={list.clicked}\n        onDelete={onDeleteHandler}\n        onClick={onClickHandler}\n        setList={setList}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import { Navbar, Container, Nav } from 'react-bootstrap';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = props => {\n  const clickHandler = () => {\n    props.setNow(moment());\n  };\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" className=\"header\">\n      <Container>\n        <Link to=\"/todo/today\">\n          <Navbar.Brand className=\"todo\" onClick={clickHandler}>\n            TO DO\n          </Navbar.Brand>\n        </Link>\n        <Nav onClick={clickHandler} className=\"justify-content-end\">\n          <Nav.Link\n            as={Link}\n            to=\"/todo/today\"\n            className=\"nav__today\"\n            ref={props.today}>\n            Today\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"/todo/month\" className=\"nav__month\">\n            Month\n          </Nav.Link>\n        </Nav>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import { useEffect, useState } from 'react';\n\nconst Clock = props => {\n  let [today, setToday] = useState(new Date());\n  const compare =\n    `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}` ===\n    props.now.clone().format('YYYY-M-D');\n\n  useEffect(() => {\n    if (compare) {\n      setTimeout(() => {\n        setToday(new Date());\n      }, 1000);\n\n      return () => {\n        clearTimeout();\n      };\n    }\n  }, [today, props.now]);\n\n  return (\n    <div>\n      <div className=\"date\">\n        {props.now.clone().format('M')}월 {props.now.clone().format('DD')}일\n      </div>\n      {compare ? (\n        <div className=\"clock\">\n          {today.getHours()}:\n          {`${\n            today.getMinutes() < 10\n              ? `0${today.getMinutes()}`\n              : `${today.getMinutes()}`\n          }`}\n          :\n          {`${\n            today.getSeconds() < 10\n              ? `0${today.getSeconds()}`\n              : `${today.getSeconds()}`\n          }`}\n        </div>\n      ) : (\n        <div className=\"none-clock\"></div>\n      )}\n    </div>\n  );\n};\n\nexport default Clock;\n","import React from 'react';\n\nconst Week = props => {\n  const { days, idx, now, today, onDaysChange } = props;\n\n  const dayChangeHandler = e => {\n    e.preventDefault();\n    onDaysChange(idx);\n  };\n\n  return (\n    <div\n      className={`day ${idx === 3 ? '' : 'choice'}`}\n      onClick={dayChangeHandler}>\n      <div>\n        {\n          days.find(\n            day =>\n              day.id ==\n              now.clone().subtract(3, 'day').add(idx, 'day').format('e')\n          ).day\n        }\n      </div>\n      <div\n        className={\n          now.clone().subtract(3, 'day').add(idx, 'day').format('YYYY-M-D') ===\n          `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`\n            ? 'today'\n            : ''\n        }>\n        {now.clone().subtract(3, 'day').add(idx, 'day').format('DD', 'date')}\n      </div>\n    </div>\n  );\n};\n\nexport default Week;\n","import React, { useState } from 'react';\nimport Week from './Week';\n\nconst Weeks = props => {\n  const today = new Date();\n  const { now, setNow } = props;\n\n  const [days, SetDays] = useState([\n    {\n      id: 0,\n      day: 'Sun',\n    },\n    {\n      id: 1,\n      day: 'Mon',\n    },\n    {\n      id: 2,\n      day: 'Tue',\n    },\n    {\n      id: 3,\n      day: 'Wed',\n    },\n    {\n      id: 4,\n      day: 'Thu',\n    },\n    {\n      id: 5,\n      day: 'Fri',\n    },\n    {\n      id: 6,\n      day: 'Sat',\n    },\n  ]);\n\n  const daysChangeHandlerRight = e => {\n    e.preventDefault();\n    const newDays = [...days];\n    newDays.push(newDays.shift());\n    SetDays(newDays);\n    const newNow = now.clone().add(1, 'day');\n    setNow(newNow);\n  };\n\n  const daysChangeHandlerLeft = e => {\n    e.preventDefault();\n    const newDays = [...days];\n    newDays.unshift(newDays.pop());\n    SetDays(newDays);\n    const newNow = now.clone().subtract(1, 'day');\n    setNow(newNow);\n  };\n\n  const daysChangeHandler = idx => {\n    if (idx > 3) {\n      idx = idx - 3;\n      const newNow = now.clone().add(idx, 'day');\n      setNow(newNow);\n      const newDays = [...days];\n      for (idx; idx > 0; idx--) {\n        newDays.push(newDays.shift());\n      }\n      SetDays(newDays);\n    } else if (idx < 3) {\n      idx = 3 - idx;\n      const newNow = now.clone().subtract(idx, 'day');\n      setNow(newNow);\n      const newDays = [...days];\n      for (idx; idx > 0; idx--) {\n        newDays.unshift(newDays.pop());\n      }\n      SetDays(newDays);\n    }\n  };\n\n  return (\n    <div className=\"week\">\n      <button onClick={daysChangeHandlerLeft}>←</button>\n      {days.map((day, idx) => (\n        <Week\n          key={idx}\n          days={days}\n          idx={idx}\n          now={now}\n          today={today}\n          onDaysChange={daysChangeHandler}\n        />\n      ))}\n      <button onClick={daysChangeHandlerRight}>→</button>\n    </div>\n  );\n};\n\nexport default Weeks;\n","const Day = props => {\n  const clickHandler = e => {\n    e.preventDefault();\n    props.onClick(props.days);\n  };\n\n  return <span onClick={clickHandler}>{props.children}</span>;\n};\n\nexport default Day;\n","import React, { useState } from 'react';\nimport Day from './Day';\nimport moment from 'moment';\n\nconst Month = props => {\n  const [getMoment, setMoment] = useState(moment());\n  const today = getMoment;\n  const firstWeek = today.clone().startOf('month').week();\n  const lastWeek =\n    today.clone().endOf('month').week() === 1\n      ? 53\n      : today.clone().endOf('month').week();\n\n  const onClickHandler = day => {\n    props.setNow(day);\n    props.history.push('/todo/today');\n  };\n\n  const calendarArr = () => {\n    let result = [];\n    let week = firstWeek;\n\n    for (week; week <= lastWeek; week++) {\n      result = result.concat(\n        <tr key={week}>\n          {Array(7)\n            .fill(0)\n            .map((data, index) => {\n              let days = today\n                .clone()\n                .startOf('year')\n                .week(week)\n                .startOf('week')\n                .add(index, 'day');\n\n              return (\n                <td\n                  key={index}\n                  className={`month__day ${\n                    moment().format('YYYYMMDD') === days.format('YYYYMMDD')\n                      ? 'month__today'\n                      : getMoment.format('MM') !== days.format('MM')\n                      ? 'month__days'\n                      : ''\n                  }`}>\n                  <Day days={days} onClick={onClickHandler}>\n                    {days.format('D')}\n                  </Day>\n                  <div\n                    className={`get-item ${\n                      localStorage.getItem(days.format('YYYY-MM-DD')) ===\n                        '[]' ||\n                      localStorage.getItem(days.format('YYYY-MM-DD')) === null\n                        ? 'none'\n                        : JSON.parse(\n                            localStorage.getItem(\n                              days.clone().format('YYYY-MM-DD')\n                            )\n                          ).find(data => data.clicked === false) === undefined\n                        ? 'all-clear'\n                        : ''\n                    }`}></div>\n                </td>\n              );\n            })}\n        </tr>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"calendar\">\n      <div className=\"month\">\n        <div className=\"control\">\n          <button\n            onClick={() => {\n              setMoment(getMoment.clone().subtract(1, 'month'));\n            }}>\n            ←\n          </button>\n          <span>{today.format('YYYY 년 MM 월')}</span>\n          <button\n            onClick={() => {\n              setMoment(getMoment.clone().add(1, 'month'));\n            }}>\n            →\n          </button>\n        </div>\n        <div\n          className={`days ${lastWeek - firstWeek === 5 ? 'more-days' : ''}`}>\n          <table>\n            <tbody>{calendarArr()}</tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Month;\n","import React, { useState, useEffect, useRef } from 'react';\nimport Input from './components/Input';\nimport NavBar from './components/NavBar';\nimport Clock from './components/Clock';\nimport Weeks from './components/Weeks';\nimport moment from 'moment';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Month from './Month';\nimport './App.css';\n\nfunction App() {\n  const [now, setNow] = useState(moment());\n  const history = useHistory();\n  const today = useRef();\n\n  useEffect(() => {\n    today.current.focus();\n    setNow(moment());\n  }, []);\n\n  return (\n    <>\n      <NavBar history={history} today={today} setNow={setNow} />\n      <Switch>\n        <Route path=\"/todo/month\">\n          <Month history={history} setNow={setNow} />\n        </Route>\n        <Route path=\"/:id\">\n          <Weeks now={now} setNow={setNow} />\n          <Clock now={now} />\n          <Input now={now.format('YYYY-MM-DD')} />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}